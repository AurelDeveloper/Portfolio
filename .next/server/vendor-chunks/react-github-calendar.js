/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-github-calendar";
exports.ids = ["vendor-chunks/react-github-calendar"];
exports.modules = {

/***/ "(rsc)/./node_modules/react-github-calendar/build/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-github-calendar/build/index.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* __next_internal_client_entry_do_not_use__  cjs */ \nconst { createProxy } = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js\");\nmodule.exports = createProxy(\"/Users/marlonhinoran/Desktop/Portfolio/node_modules/react-github-calendar/build/index.js\");\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVhY3QtZ2l0aHViLWNhbGVuZGFyL2J1aWxkL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7OztDQW9IQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJsb24taGlub3Jhbi8uL25vZGVfbW9kdWxlcy9yZWFjdC1naXRodWItY2FsZW5kYXIvYnVpbGQvaW5kZXguanM/YWQ5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG4ndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgQ2FsZW5kYXIgPSByZXF1aXJlKCdyZWFjdC1hY3Rpdml0eS1jYWxlbmRhcicpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcERlZmF1bHQgKGUpIHsgcmV0dXJuIGUgJiYgZS5fX2VzTW9kdWxlID8gZSA6IHsgZGVmYXVsdDogZSB9OyB9XG5cbnZhciBSZWFjdF9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHQoUmVhY3QpO1xudmFyIENhbGVuZGFyX19kZWZhdWx0ID0gLyojX19QVVJFX18qL19pbnRlcm9wRGVmYXVsdChDYWxlbmRhcik7XG5cbmZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gPyBPYmplY3QuYXNzaWduLmJpbmQoKSA6IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuXG5jb25zdCBBUElfVVJMID0gJ2h0dHBzOi8vZ2l0aHViLWNvbnRyaWJ1dGlvbnMtYXBpLmpvZ3J1YmVyLmRlL3Y0Lyc7XG5cbi8vIEdpdEh1YiB0aGVtZVxuY29uc3QgREVGQVVMVF9USEVNRSA9IHtcbiAgbGlnaHQ6IFsnI2ViZWRmMCcsICcjOWJlOWE4JywgJyM0MGM0NjMnLCAnIzMwYTE0ZScsICcjMjE2ZTM5J10sXG4gIGRhcms6IFsnIzE2MWIyMicsICcjMGU0NDI5JywgJyMwMDZkMzInLCAnIzI2YTY0MScsICcjMzlkMzUzJ11cbn07XG5cbmNvbnN0IHRyYW5zZm9ybURhdGEgPSAoZGF0YSwgdHJhbnNmb3JtRm4pID0+IHtcbiAgaWYgKHR5cGVvZiB0cmFuc2Zvcm1GbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBkYXRhO1xuICB9XG4gIGNvbnN0IHRyYW5zZm9ybWVkRGF0YSA9IHRyYW5zZm9ybUZuKGRhdGEpO1xuICBpZiAoIUFycmF5LmlzQXJyYXkodHJhbnNmb3JtZWREYXRhKSkge1xuICAgIHRocm93IEVycm9yKGBQYXNzZWQgZnVuY3Rpb24gdHJhbnNmb3JtRGF0YSBtdXN0IHJldHVybiBhIGxpc3Qgb2YgRGF5IG9iamVjdHMuYCk7XG4gIH1cbiAgaWYgKHRyYW5zZm9ybWVkRGF0YS5sZW5ndGggPiAwKSB7XG4gICAgY29uc3QgdGVzdE9iaiA9IHRyYW5zZm9ybWVkRGF0YVswXTtcbiAgICBpZiAodHlwZW9mIHRlc3RPYmouY291bnQgIT09ICdudW1iZXInIHx8IHRlc3RPYmouY291bnQgPCAwKSB7XG4gICAgICB0aHJvdyBFcnJvcihgUmVxdWlyZWQgcHJvcGVydHkgXCJjb3VudDogbnVtYmVyXCIgbWlzc2luZyBvciBpbnZhbGlkLiBHb3Q6ICR7dGVzdE9iai5jb3VudH1gKTtcbiAgICB9XG4gICAgaWYgKCEvXFxkezR9LVxcZHsyfS1cXGR7Mn0vLnRlc3QodGVzdE9iai5kYXRlKSkge1xuICAgICAgdGhyb3cgRXJyb3IoYFJlcXVpcmVkIHByb3BlcnR5IFwiZGF0ZTogWVlZWS1NTS1ERFwiIG1pc3Npbmcgb3IgaW52YWxpZC4gR290OiAke3Rlc3RPYmouZGF0ZX1gKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB0ZXN0T2JqLmxldmVsICE9PSAnbnVtYmVyJyB8fCB0ZXN0T2JqLmxldmVsIDwgMCB8fCB0ZXN0T2JqLmxldmVsID4gNCkge1xuICAgICAgdGhyb3cgRXJyb3IoYFJlcXVpcmVkIHByb3BlcnR5IFwibGV2ZWw6IDAgfCAxIHwgMiB8IDMgfCA0XCIgbWlzc2luZyBvciBpbnZhbGlkOiBHb3Q6ICR7dGVzdE9iai5sZXZlbH0uYCk7XG4gICAgfVxuICB9XG4gIHJldHVybiB0cmFuc2Zvcm1lZERhdGE7XG59O1xuXG5hc3luYyBmdW5jdGlvbiBmZXRjaENhbGVuZGFyRGF0YSh1c2VybmFtZSwgeWVhcikge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke0FQSV9VUkx9JHt1c2VybmFtZX0/eT0ke3llYXJ9YCk7XG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICB0aHJvdyBFcnJvcihgRmV0Y2hpbmcgR2l0SHViIGNvbnRyaWJ1dGlvbiBkYXRhIGZvciBcIiR7dXNlcm5hbWV9XCIgZmFpbGVkOiAke2RhdGEuZXJyb3J9YCk7XG4gIH1cbiAgcmV0dXJuIGRhdGE7XG59XG5jb25zdCBHaXRIdWJDYWxlbmRhciA9ICh7XG4gIHVzZXJuYW1lLFxuICB5ZWFyID0gJ2xhc3QnLFxuICBsYWJlbHMsXG4gIHRyYW5zZm9ybURhdGE6IHRyYW5zZm9ybUZuLFxuICB0cmFuc2Zvcm1Ub3RhbENvdW50ID0gdHJ1ZSxcbiAgdGhyb3dPbkVycm9yID0gZmFsc2UsXG4gIGVycm9yTWVzc2FnZSA9IGBFcnJvciDigJMgRmV0Y2hpbmcgR2l0SHViIGNvbnRyaWJ1dGlvbiBkYXRhIGZvciBcIiR7dXNlcm5hbWV9XCIgZmFpbGVkLmAsXG4gIC4uLnByb3BzXG59KSA9PiB7XG4gIGNvbnN0IFtkYXRhLCBzZXREYXRhXSA9IFJlYWN0LnVzZVN0YXRlKG51bGwpO1xuICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gUmVhY3QudXNlU3RhdGUobnVsbCk7XG4gIGNvbnN0IGZldGNoRGF0YSA9IFJlYWN0LnVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgIHNldEVycm9yKG51bGwpO1xuICAgIGZldGNoQ2FsZW5kYXJEYXRhKHVzZXJuYW1lLCB5ZWFyKS50aGVuKHNldERhdGEpLmNhdGNoKHNldEVycm9yKS5maW5hbGx5KCgpID0+IHNldExvYWRpbmcoZmFsc2UpKTtcbiAgfSwgW3VzZXJuYW1lLCB5ZWFyXSk7XG4gIFJlYWN0LnVzZUVmZmVjdChmZXRjaERhdGEsIFtmZXRjaERhdGFdKTtcblxuICAvLyBSZWFjdCBlcnJvciBib3VuZGFyaWVzIGNhbid0IGhhbmRsZSBhc3luY2hyb25vdXMgY29kZSwgc28gcmV0aHJvdy5cbiAgaWYgKGVycm9yKSB7XG4gICAgaWYgKHRocm93T25FcnJvcikge1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3RfX2RlZmF1bHQuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIGVycm9yTWVzc2FnZSk7XG4gICAgfVxuICB9XG4gIGlmIChsb2FkaW5nIHx8ICFkYXRhKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdF9fZGVmYXVsdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoQ2FsZW5kYXIuU2tlbGV0b24sIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgbG9hZGluZzogdHJ1ZVxuICAgIH0pKTtcbiAgfVxuICBjb25zdCB0aGVtZSA9IHByb3BzLnRoZW1lID8/IERFRkFVTFRfVEhFTUU7XG4gIGNvbnN0IGRlZmF1bHRMYWJlbHMgPSB7XG4gICAgdG90YWxDb3VudDogYHt7Y291bnR9fSBjb250cmlidXRpb25zIGluICR7eWVhciA9PT0gJ2xhc3QnID8gJ3RoZSBsYXN0IHllYXInIDogJ3t7eWVhcn19J31gXG4gIH07XG4gIGNvbnN0IHRvdGFsQ291bnQgPSB5ZWFyID09PSAnbGFzdCcgPyBkYXRhLnRvdGFsWydsYXN0WWVhciddIDogZGF0YS50b3RhbFt5ZWFyXTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdF9fZGVmYXVsdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoQ2FsZW5kYXJfX2RlZmF1bHQuZGVmYXVsdCwgX2V4dGVuZHMoe1xuICAgIGRhdGE6IHRyYW5zZm9ybURhdGEoZGF0YS5jb250cmlidXRpb25zLCB0cmFuc2Zvcm1GbiksXG4gICAgdGhlbWU6IHRoZW1lLFxuICAgIGxhYmVsczogT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdExhYmVscywgbGFiZWxzKSxcbiAgICB0b3RhbENvdW50OiB0cmFuc2Zvcm1GbiAmJiB0cmFuc2Zvcm1Ub3RhbENvdW50ID8gdW5kZWZpbmVkIDogdG90YWxDb3VudFxuICB9LCBwcm9wcywge1xuICAgIG1heExldmVsOiA0XG4gIH0pKTtcbn07XG5cbmV4cG9ydHMuZGVmYXVsdCA9IEdpdEh1YkNhbGVuZGFyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/react-github-calendar/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-github-calendar/build/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-github-calendar/build/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("'use client';\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar Calendar = __webpack_require__(/*! react-activity-calendar */ \"(ssr)/./node_modules/react-activity-calendar/build/index.js\");\n\nfunction _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }\n\nvar React__default = /*#__PURE__*/_interopDefault(React);\nvar Calendar__default = /*#__PURE__*/_interopDefault(Calendar);\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nconst API_URL = 'https://github-contributions-api.jogruber.de/v4/';\n\n// GitHub theme\nconst DEFAULT_THEME = {\n  light: ['#ebedf0', '#9be9a8', '#40c463', '#30a14e', '#216e39'],\n  dark: ['#161b22', '#0e4429', '#006d32', '#26a641', '#39d353']\n};\n\nconst transformData = (data, transformFn) => {\n  if (typeof transformFn !== 'function') {\n    return data;\n  }\n  const transformedData = transformFn(data);\n  if (!Array.isArray(transformedData)) {\n    throw Error(`Passed function transformData must return a list of Day objects.`);\n  }\n  if (transformedData.length > 0) {\n    const testObj = transformedData[0];\n    if (typeof testObj.count !== 'number' || testObj.count < 0) {\n      throw Error(`Required property \"count: number\" missing or invalid. Got: ${testObj.count}`);\n    }\n    if (!/\\d{4}-\\d{2}-\\d{2}/.test(testObj.date)) {\n      throw Error(`Required property \"date: YYYY-MM-DD\" missing or invalid. Got: ${testObj.date}`);\n    }\n    if (typeof testObj.level !== 'number' || testObj.level < 0 || testObj.level > 4) {\n      throw Error(`Required property \"level: 0 | 1 | 2 | 3 | 4\" missing or invalid: Got: ${testObj.level}.`);\n    }\n  }\n  return transformedData;\n};\n\nasync function fetchCalendarData(username, year) {\n  const response = await fetch(`${API_URL}${username}?y=${year}`);\n  const data = await response.json();\n  if (!response.ok) {\n    throw Error(`Fetching GitHub contribution data for \"${username}\" failed: ${data.error}`);\n  }\n  return data;\n}\nconst GitHubCalendar = ({\n  username,\n  year = 'last',\n  labels,\n  transformData: transformFn,\n  transformTotalCount = true,\n  throwOnError = false,\n  errorMessage = `Error – Fetching GitHub contribution data for \"${username}\" failed.`,\n  ...props\n}) => {\n  const [data, setData] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const fetchData = React.useCallback(() => {\n    setLoading(true);\n    setError(null);\n    fetchCalendarData(username, year).then(setData).catch(setError).finally(() => setLoading(false));\n  }, [username, year]);\n  React.useEffect(fetchData, [fetchData]);\n\n  // React error boundaries can't handle asynchronous code, so rethrow.\n  if (error) {\n    if (throwOnError) {\n      throw error;\n    } else {\n      return /*#__PURE__*/React__default.default.createElement(\"div\", null, errorMessage);\n    }\n  }\n  if (loading || !data) {\n    return /*#__PURE__*/React__default.default.createElement(Calendar.Skeleton, _extends({}, props, {\n      loading: true\n    }));\n  }\n  const theme = props.theme ?? DEFAULT_THEME;\n  const defaultLabels = {\n    totalCount: `{{count}} contributions in ${year === 'last' ? 'the last year' : '{{year}}'}`\n  };\n  const totalCount = year === 'last' ? data.total['lastYear'] : data.total[year];\n  return /*#__PURE__*/React__default.default.createElement(Calendar__default.default, _extends({\n    data: transformData(data.contributions, transformFn),\n    theme: theme,\n    labels: Object.assign({}, defaultLabels, labels),\n    totalCount: transformFn && transformTotalCount ? undefined : totalCount\n  }, props, {\n    maxLevel: 4\n  }));\n};\n\nexports[\"default\"] = GitHubCalendar;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtZ2l0aHViLWNhbGVuZGFyL2J1aWxkL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxZQUFZLG1CQUFPLENBQUMsd0dBQU87QUFDM0IsZUFBZSxtQkFBTyxDQUFDLDRGQUF5Qjs7QUFFaEQsK0JBQStCLGlDQUFpQzs7QUFFaEU7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdGQUFnRixjQUFjO0FBQzlGO0FBQ0EsYUFBYSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7QUFDM0IsbUZBQW1GLGFBQWE7QUFDaEc7QUFDQTtBQUNBLDJGQUEyRixjQUFjO0FBQ3pHO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0NBQWtDLFFBQVEsRUFBRSxTQUFTLEtBQUssS0FBSztBQUMvRDtBQUNBO0FBQ0EsMERBQTBELFNBQVMsWUFBWSxXQUFXO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLFNBQVM7QUFDNUU7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSwyRkFBMkY7QUFDM0Y7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLFFBQVEsbUJBQW1CLHVDQUF1QyxNQUFNLEVBQUU7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDs7QUFFQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFybG9uLWhpbm9yYW4vLi9ub2RlX21vZHVsZXMvcmVhY3QtZ2l0aHViLWNhbGVuZGFyL2J1aWxkL2luZGV4LmpzPzdjYmIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIENhbGVuZGFyID0gcmVxdWlyZSgncmVhY3QtYWN0aXZpdHktY2FsZW5kYXInKTtcblxuZnVuY3Rpb24gX2ludGVyb3BEZWZhdWx0IChlKSB7IHJldHVybiBlICYmIGUuX19lc01vZHVsZSA/IGUgOiB7IGRlZmF1bHQ6IGUgfTsgfVxuXG52YXIgUmVhY3RfX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX2ludGVyb3BEZWZhdWx0KFJlYWN0KTtcbnZhciBDYWxlbmRhcl9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHQoQ2FsZW5kYXIpO1xuXG5mdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduID8gT2JqZWN0LmFzc2lnbi5iaW5kKCkgOiBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cblxuY29uc3QgQVBJX1VSTCA9ICdodHRwczovL2dpdGh1Yi1jb250cmlidXRpb25zLWFwaS5qb2dydWJlci5kZS92NC8nO1xuXG4vLyBHaXRIdWIgdGhlbWVcbmNvbnN0IERFRkFVTFRfVEhFTUUgPSB7XG4gIGxpZ2h0OiBbJyNlYmVkZjAnLCAnIzliZTlhOCcsICcjNDBjNDYzJywgJyMzMGExNGUnLCAnIzIxNmUzOSddLFxuICBkYXJrOiBbJyMxNjFiMjInLCAnIzBlNDQyOScsICcjMDA2ZDMyJywgJyMyNmE2NDEnLCAnIzM5ZDM1MyddXG59O1xuXG5jb25zdCB0cmFuc2Zvcm1EYXRhID0gKGRhdGEsIHRyYW5zZm9ybUZuKSA9PiB7XG4gIGlmICh0eXBlb2YgdHJhbnNmb3JtRm4gIT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuICBjb25zdCB0cmFuc2Zvcm1lZERhdGEgPSB0cmFuc2Zvcm1GbihkYXRhKTtcbiAgaWYgKCFBcnJheS5pc0FycmF5KHRyYW5zZm9ybWVkRGF0YSkpIHtcbiAgICB0aHJvdyBFcnJvcihgUGFzc2VkIGZ1bmN0aW9uIHRyYW5zZm9ybURhdGEgbXVzdCByZXR1cm4gYSBsaXN0IG9mIERheSBvYmplY3RzLmApO1xuICB9XG4gIGlmICh0cmFuc2Zvcm1lZERhdGEubGVuZ3RoID4gMCkge1xuICAgIGNvbnN0IHRlc3RPYmogPSB0cmFuc2Zvcm1lZERhdGFbMF07XG4gICAgaWYgKHR5cGVvZiB0ZXN0T2JqLmNvdW50ICE9PSAnbnVtYmVyJyB8fCB0ZXN0T2JqLmNvdW50IDwgMCkge1xuICAgICAgdGhyb3cgRXJyb3IoYFJlcXVpcmVkIHByb3BlcnR5IFwiY291bnQ6IG51bWJlclwiIG1pc3Npbmcgb3IgaW52YWxpZC4gR290OiAke3Rlc3RPYmouY291bnR9YCk7XG4gICAgfVxuICAgIGlmICghL1xcZHs0fS1cXGR7Mn0tXFxkezJ9Ly50ZXN0KHRlc3RPYmouZGF0ZSkpIHtcbiAgICAgIHRocm93IEVycm9yKGBSZXF1aXJlZCBwcm9wZXJ0eSBcImRhdGU6IFlZWVktTU0tRERcIiBtaXNzaW5nIG9yIGludmFsaWQuIEdvdDogJHt0ZXN0T2JqLmRhdGV9YCk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdGVzdE9iai5sZXZlbCAhPT0gJ251bWJlcicgfHwgdGVzdE9iai5sZXZlbCA8IDAgfHwgdGVzdE9iai5sZXZlbCA+IDQpIHtcbiAgICAgIHRocm93IEVycm9yKGBSZXF1aXJlZCBwcm9wZXJ0eSBcImxldmVsOiAwIHwgMSB8IDIgfCAzIHwgNFwiIG1pc3Npbmcgb3IgaW52YWxpZDogR290OiAke3Rlc3RPYmoubGV2ZWx9LmApO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJhbnNmb3JtZWREYXRhO1xufTtcblxuYXN5bmMgZnVuY3Rpb24gZmV0Y2hDYWxlbmRhckRhdGEodXNlcm5hbWUsIHllYXIpIHtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtBUElfVVJMfSR7dXNlcm5hbWV9P3k9JHt5ZWFyfWApO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgdGhyb3cgRXJyb3IoYEZldGNoaW5nIEdpdEh1YiBjb250cmlidXRpb24gZGF0YSBmb3IgXCIke3VzZXJuYW1lfVwiIGZhaWxlZDogJHtkYXRhLmVycm9yfWApO1xuICB9XG4gIHJldHVybiBkYXRhO1xufVxuY29uc3QgR2l0SHViQ2FsZW5kYXIgPSAoe1xuICB1c2VybmFtZSxcbiAgeWVhciA9ICdsYXN0JyxcbiAgbGFiZWxzLFxuICB0cmFuc2Zvcm1EYXRhOiB0cmFuc2Zvcm1GbixcbiAgdHJhbnNmb3JtVG90YWxDb3VudCA9IHRydWUsXG4gIHRocm93T25FcnJvciA9IGZhbHNlLFxuICBlcnJvck1lc3NhZ2UgPSBgRXJyb3Ig4oCTIEZldGNoaW5nIEdpdEh1YiBjb250cmlidXRpb24gZGF0YSBmb3IgXCIke3VzZXJuYW1lfVwiIGZhaWxlZC5gLFxuICAuLi5wcm9wc1xufSkgPT4ge1xuICBjb25zdCBbZGF0YSwgc2V0RGF0YV0gPSBSZWFjdC51c2VTdGF0ZShudWxsKTtcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IFJlYWN0LnVzZVN0YXRlKG51bGwpO1xuICBjb25zdCBmZXRjaERhdGEgPSBSZWFjdC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICBzZXRFcnJvcihudWxsKTtcbiAgICBmZXRjaENhbGVuZGFyRGF0YSh1c2VybmFtZSwgeWVhcikudGhlbihzZXREYXRhKS5jYXRjaChzZXRFcnJvcikuZmluYWxseSgoKSA9PiBzZXRMb2FkaW5nKGZhbHNlKSk7XG4gIH0sIFt1c2VybmFtZSwgeWVhcl0pO1xuICBSZWFjdC51c2VFZmZlY3QoZmV0Y2hEYXRhLCBbZmV0Y2hEYXRhXSk7XG5cbiAgLy8gUmVhY3QgZXJyb3IgYm91bmRhcmllcyBjYW4ndCBoYW5kbGUgYXN5bmNocm9ub3VzIGNvZGUsIHNvIHJldGhyb3cuXG4gIGlmIChlcnJvcikge1xuICAgIGlmICh0aHJvd09uRXJyb3IpIHtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0X19kZWZhdWx0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLCBlcnJvck1lc3NhZ2UpO1xuICAgIH1cbiAgfVxuICBpZiAobG9hZGluZyB8fCAhZGF0YSkge1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3RfX2RlZmF1bHQuZGVmYXVsdC5jcmVhdGVFbGVtZW50KENhbGVuZGFyLlNrZWxldG9uLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICAgIGxvYWRpbmc6IHRydWVcbiAgICB9KSk7XG4gIH1cbiAgY29uc3QgdGhlbWUgPSBwcm9wcy50aGVtZSA/PyBERUZBVUxUX1RIRU1FO1xuICBjb25zdCBkZWZhdWx0TGFiZWxzID0ge1xuICAgIHRvdGFsQ291bnQ6IGB7e2NvdW50fX0gY29udHJpYnV0aW9ucyBpbiAke3llYXIgPT09ICdsYXN0JyA/ICd0aGUgbGFzdCB5ZWFyJyA6ICd7e3llYXJ9fSd9YFxuICB9O1xuICBjb25zdCB0b3RhbENvdW50ID0geWVhciA9PT0gJ2xhc3QnID8gZGF0YS50b3RhbFsnbGFzdFllYXInXSA6IGRhdGEudG90YWxbeWVhcl07XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3RfX2RlZmF1bHQuZGVmYXVsdC5jcmVhdGVFbGVtZW50KENhbGVuZGFyX19kZWZhdWx0LmRlZmF1bHQsIF9leHRlbmRzKHtcbiAgICBkYXRhOiB0cmFuc2Zvcm1EYXRhKGRhdGEuY29udHJpYnV0aW9ucywgdHJhbnNmb3JtRm4pLFxuICAgIHRoZW1lOiB0aGVtZSxcbiAgICBsYWJlbHM6IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRMYWJlbHMsIGxhYmVscyksXG4gICAgdG90YWxDb3VudDogdHJhbnNmb3JtRm4gJiYgdHJhbnNmb3JtVG90YWxDb3VudCA/IHVuZGVmaW5lZCA6IHRvdGFsQ291bnRcbiAgfSwgcHJvcHMsIHtcbiAgICBtYXhMZXZlbDogNFxuICB9KSk7XG59O1xuXG5leHBvcnRzLmRlZmF1bHQgPSBHaXRIdWJDYWxlbmRhcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-github-calendar/build/index.js\n");

/***/ })

};
;